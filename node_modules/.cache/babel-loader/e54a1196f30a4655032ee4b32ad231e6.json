{"ast":null,"code":"import _classCallCheck from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sin/Udemy/blog/src/components/UserHeader.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions';\n\nvar UserHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserHeader, _React$Component);\n\n  function UserHeader() {\n    _classCallCheck(this, UserHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserHeader).apply(this, arguments));\n  }\n\n  _createClass(UserHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = this.props.userId;\n      this.props.fetchUser(userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('UserHeader state, props : ', this.state, this.props); //1.Before ES6\n      //const user = this.props.users.find(user => user.id === this.props.userId)\n      //1.After ES6\n      // const { userId, users } = this.props; \n      // const user = users.find(user => user.id === userId)\n\n      var users = this.props.users;\n\n      if (!users) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, users.name);\n    }\n  }]);\n\n  return UserHeader;\n}(React.Component);\n\n; //2. Before  \n// const mapStateToProps = state => {\n//   console.log('UserHeader mapStateToProps state : ', state)\n//   return { users: state.users }\n// }\n//2. After \n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    users: state.users.find(function (user) {\n      return user.id === ownProps.userId;\n    })\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUser: fetchUser\n})(UserHeader);","map":{"version":3,"sources":["/home/sin/Udemy/blog/src/components/UserHeader.js"],"names":["React","connect","fetchUser","UserHeader","userId","props","console","log","state","users","name","Component","mapStateToProps","ownProps","find","user","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;IAEMC,U;;;;;;;;;;;;;wCACgB;AAAA,UACVC,MADU,GACC,KAAKC,KADN,CACVD,MADU;AAElB,WAAKC,KAAL,CAAWH,SAAX,CAAqBE,MAArB;AACD;;;6BAEQ;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAKC,KAA/C,EAAsD,KAAKH,KAA3D,EADK,CAGL;AACA;AAEA;AACA;AACA;;AARK,UAUGI,KAVH,GAUa,KAAKJ,KAVlB,CAUGI,KAVH;;AAYL,UAAI,CAACA,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAK,CAACC,IAAZ,CADJ;AAGH;;;;EAxBsBV,KAAK,CAACW,S;;AA2B9B,C,CAED;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD,EAAQK,QAAR,EAAqB;AAC3C,SAAO;AAAEJ,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYK,IAAZ,CAAiB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYH,QAAQ,CAACT,MAAzB;AAAA,KAArB;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeH,OAAO,CAACW,eAAD,EAAkB;AAACV,EAAAA,SAAS,EAATA;AAAD,CAAlB,CAAP,CAAsCC,UAAtC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions'\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    const { userId } = this.props; \n    this.props.fetchUser(userId);\n  }\n\n  render() {\n      console.log('UserHeader state, props : ', this.state, this.props)\n      \n      //1.Before ES6\n      //const user = this.props.users.find(user => user.id === this.props.userId)\n      \n      //1.After ES6\n      // const { userId, users } = this.props; \n      // const user = users.find(user => user.id === userId)\n      \n      const { users } = this.props;\n\n      if (!users) {\n        return null;\n      }\n      return (\n          <div>{users.name}</div>\n      )\n  };\n\n\n};\n\n//2. Before  \n// const mapStateToProps = state => {\n//   console.log('UserHeader mapStateToProps state : ', state)\n//   return { users: state.users }\n// }\n\n//2. After \nconst mapStateToProps = (state, ownProps) => {\n  return { users: state.users.find(user => user.id === ownProps.userId)}\n}\n\nexport default connect(mapStateToProps, {fetchUser})(UserHeader);\n\n"]},"metadata":{},"sourceType":"module"}