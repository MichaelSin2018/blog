{"ast":null,"code":"import _classCallCheck from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sin/Udemy/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sin/Udemy/blog/src/components/UserHeader.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import { fetchUser } from '../actions'\n\nvar UserHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserHeader, _React$Component);\n\n  function UserHeader() {\n    _classCallCheck(this, UserHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserHeader).apply(this, arguments));\n  }\n\n  _createClass(UserHeader, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   const { userId } = this.props; \n    //   this.props.fetchUser(userId);\n    // }\n    value: function render() {\n      console.log('UserHeader state, props : ', this.state, this.props); //1.Before ES6\n      //const user = this.props.users.find(user => user.id === this.props.userId)\n      //1.After ES6\n      // const { userId, users } = this.props; \n      // const user = users.find(user => user.id === userId)\n\n      var user = this.props.user;\n\n      if (!user) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, user.name);\n    }\n  }]);\n\n  return UserHeader;\n}(React.Component);\n\n; //2. Before  \n// const mapStateToProps = state => {\n//   console.log('UserHeader mapStateToProps state : ', state)\n//   return { users: state.users }\n// }\n//2. After \n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    user: state.users.find(function (user) {\n      return user.id === ownProps.userId;\n    })\n  };\n}; // 3. Before removing fetchUser\n// export default connect(mapStateToProps, {fetchUser})(UserHeader);\n// 3. After removing fetchUser\n\n\nexport default connect(mapStateToProps)(UserHeader);","map":{"version":3,"sources":["/home/sin/Udemy/blog/src/components/UserHeader.js"],"names":["React","connect","UserHeader","console","log","state","props","user","name","Component","mapStateToProps","ownProps","users","find","id","userId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;IAEMC,U;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;6BAES;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAKC,KAA/C,EAAsD,KAAKC,KAA3D,EADK,CAGL;AACA;AAEA;AACA;AACA;;AARK,UAUGC,IAVH,GAUY,KAAKD,KAVjB,CAUGC,IAVH;;AAYL,UAAI,CAACA,IAAL,EAAW;AACT,eAAO,IAAP;AACD;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAI,CAACC,IAAX,CADJ;AAGH;;;;EAxBsBR,KAAK,CAACS,S;;AA2B9B,C,CAED;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAQM,QAAR,EAAqB;AAC3C,SAAO;AAAEJ,IAAAA,IAAI,EAAEF,KAAK,CAACO,KAAN,CAAYC,IAAZ,CAAiB,UAAAN,IAAI;AAAA,aAAIA,IAAI,CAACO,EAAL,KAAYH,QAAQ,CAACI,MAAzB;AAAA,KAArB;AAAR,GAAP;AACD,CAFD,C,CAIA;AACA;AAEA;;;AACA,eAAed,OAAO,CAACS,eAAD,CAAP,CAAyBR,UAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import { fetchUser } from '../actions'\n\nclass UserHeader extends React.Component {\n  // componentDidMount() {\n  //   const { userId } = this.props; \n  //   this.props.fetchUser(userId);\n  // }\n\n  render() {\n      console.log('UserHeader state, props : ', this.state, this.props)\n      \n      //1.Before ES6\n      //const user = this.props.users.find(user => user.id === this.props.userId)\n      \n      //1.After ES6\n      // const { userId, users } = this.props; \n      // const user = users.find(user => user.id === userId)\n      \n      const { user } = this.props;\n\n      if (!user) {\n        return null;\n      }\n      return (\n          <div>{user.name}</div>\n      )\n  };\n\n\n};\n\n//2. Before  \n// const mapStateToProps = state => {\n//   console.log('UserHeader mapStateToProps state : ', state)\n//   return { users: state.users }\n// }\n\n//2. After \nconst mapStateToProps = (state, ownProps) => {\n  return { user: state.users.find(user => user.id === ownProps.userId)}\n}\n\n// 3. Before removing fetchUser\n// export default connect(mapStateToProps, {fetchUser})(UserHeader);\n\n// 3. After removing fetchUser\nexport default connect(mapStateToProps)(UserHeader);\n\n"]},"metadata":{},"sourceType":"module"}